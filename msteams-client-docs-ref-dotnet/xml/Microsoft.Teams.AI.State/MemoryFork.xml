<Type Name="MemoryFork" FullName="Microsoft.Teams.AI.State.MemoryFork">
  <TypeSignature Language="C#" Value="public class MemoryFork : Microsoft.Teams.AI.State.IMemory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryFork extends System.Object implements class Microsoft.Teams.AI.State.IMemory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.State.MemoryFork" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryFork&#xA;Implements IMemory" />
  <TypeSignature Language="F#" Value="type MemoryFork = class&#xA;    interface IMemory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Teams.AI.State.IMemory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Forks an existing memory.
            A memory fork is a memory that is a copy of another memory, but can be modified without affecting the original memory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryFork (Microsoft.Teams.AI.State.IMemory? memory = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.State.IMemory memory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.MemoryFork.#ctor(Microsoft.Teams.AI.State.IMemory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional memory As IMemory = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.State.MemoryFork : Microsoft.Teams.AI.State.IMemory -&gt; Microsoft.Teams.AI.State.MemoryFork" Usage="new Microsoft.Teams.AI.State.MemoryFork memory" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memory" Type="Microsoft.Teams.AI.State.IMemory" />
      </Parameters>
      <Docs>
        <param name="memory">Memory to fork.</param>
        <summary>
            Creates a new `MemoryFork` instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteValue">
      <MemberSignature Language="C#" Value="public void DeleteValue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteValue(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.MemoryFork.DeleteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteValue (path As String)" />
      <MemberSignature Language="F#" Value="abstract member DeleteValue : string -&gt; unit&#xA;override this.DeleteValue : string -&gt; unit" Usage="memoryFork.DeleteValue path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.State.IMemory.DeleteValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Path to the value to delete in the form of `[scope].property`.
            If scope is omitted, the value is deleted from the temporary scope.</param>
        <summary>
            Deletes a value from the memory. Only forked values will be deleted.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object? GetValue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.MemoryFork.GetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (path As String) As Object" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string -&gt; obj&#xA;override this.GetValue : string -&gt; obj" Usage="memoryFork.GetValue path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.State.IMemory.GetValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Path to the value to retrieve in the form of `[scope].property`.
            If scope is omitted, the value is retrieved from the temporary scope.</param>
        <summary>
            Retrieves a value from the memory. The forked memory is checked first, then the original memory.
            </summary>
        <returns>The value or undefined if not found.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public bool HasValue (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasValue(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.MemoryFork.HasValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasValue (path As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasValue : string -&gt; bool&#xA;override this.HasValue : string -&gt; bool" Usage="memoryFork.HasValue path" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.State.IMemory.HasValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Path to the value to check in the form of `[scope].property`.
            If scope is omitted, the value is checked in the temporary scope.</param>
        <summary>
            Checks if a value exists in the memory. The forked memory is checked first, then the original memory.
            </summary>
        <returns>True if the value exists, false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string path, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string path, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.MemoryFork.SetValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (path As String, value As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string * obj -&gt; unit&#xA;override this.SetValue : string * obj -&gt; unit" Usage="memoryFork.SetValue (path, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.State.IMemory.SetValue(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="path">Path to the value to assign in the form of `[scope].property`.
            If scope is omitted, the value is assigned to the temporary scope.</param>
        <param name="value">Value to assign.</param>
        <summary>
            Assigns a value to the memory. The value is assigned to the forked memory.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
