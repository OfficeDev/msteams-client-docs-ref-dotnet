<Type Name="Record" FullName="Microsoft.Teams.AI.State.Record">
  <TypeSignature Language="C#" Value="public class Record : System.Collections.Generic.Dictionary&lt;string,object&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Record extends System.Collections.Generic.Dictionary`2&lt;string, object&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.State.Record" />
  <TypeSignature Language="VB.NET" Value="Public Class Record&#xA;Inherits Dictionary(Of String, Object)" />
  <TypeSignature Language="F#" Value="type Record = class&#xA;    inherit Dictionary&lt;string, obj&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.String</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="!1">System.Object</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The class representing a record.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Record ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.Record.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? Get&lt;T&gt; (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Get&lt;T&gt;(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.Record.Get``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get(Of T) (key As String) As T" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; 'T" Usage="record.Get key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of the value</typeparam>
        <param name="key">key to look for</param>
        <summary>
            Gets the value from the dictionary.
            </summary>
        <returns>The value associated with the key</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void Set&lt;T&gt; (string key, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set&lt;T&gt;(string key, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.Record.Set``1(System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set(Of T) (key As String, value As T)" />
      <MemberSignature Language="F#" Value="member this.Set : string * 'T -&gt; unit" Usage="record.Set (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of value</typeparam>
        <param name="key">key to look for</param>
        <param name="value">value associated with key</param>
        <summary>
            Sets value in the dictionary.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetValue&lt;T&gt; (string key, out T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue&lt;T&gt;(string key, [out] !!T&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.State.Record.TryGetValue``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue(Of T) (key As String, ByRef value As T) As Boolean" />
      <MemberSignature Language="F#" Value="override this.TryGetValue : string * 'T -&gt; bool" Usage="record.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of the value</typeparam>
        <param name="key">key to look for</param>
        <param name="value">value associated with key</param>
        <summary>
            Tries to get the value from the dictionary.
            </summary>
        <returns>True if a value of given type is associated with key.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException" />
      </Docs>
    </Member>
  </Members>
</Type>
