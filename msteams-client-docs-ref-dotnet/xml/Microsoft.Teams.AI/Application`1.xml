<Type Name="Application&lt;TState&gt;" FullName="Microsoft.Teams.AI.Application&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public class Application&lt;TState&gt; : Microsoft.Bot.Builder.IBot where TState : TurnState, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Application`1&lt;.ctor (class Microsoft.Teams.AI.State.TurnState) TState&gt; extends System.Object implements class Microsoft.Bot.Builder.IBot" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.Application`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Application(Of TState)&#xA;Implements IBot" />
  <TypeSignature Language="F#" Value="type Application&lt;'State (requires 'State :&gt; TurnState and 'State : (new : unit -&gt; 'State))&gt; = class&#xA;    interface IBot" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.Teams.AI.State.TurnState</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IBot</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TState">Type of the turnState. This allows for strongly typed access to the turn turnState.</typeparam>
    <summary>
             Application class for routing and processing incoming requests.
             </summary>
    <remarks>
             The Application object replaces the traditional ActivityHandler that a bot would use. It supports
             a simpler fluent style of authoring bots versus the inheritance based approach used by the
             ActivityHandler class.
            
             Additionally, it has built-in support for calling into the SDK's AI system and can be used to create
             bots that leverage Large Language Models (LLM) and other AI capabilities.
             </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Application (Microsoft.Teams.AI.ApplicationOptions&lt;TState&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.ApplicationOptions`1&lt;!TState&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.#ctor(Microsoft.Teams.AI.ApplicationOptions{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As ApplicationOptions(Of TState))" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; : Microsoft.Teams.AI.ApplicationOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="new Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Teams.AI.ApplicationOptions&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="options">Optional. Options used to configure the application.</param>
        <summary>
            Creates a new Application instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.BotAdapter Adapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.BotAdapter Adapter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.Adapter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapter As BotAdapter" />
      <MemberSignature Language="F#" Value="member this.Adapter : Microsoft.Bot.Builder.BotAdapter" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.Adapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.BotAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing the bot adapter used to configure the application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdaptiveCards">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AdaptiveCards&lt;TState&gt; AdaptiveCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AdaptiveCards`1&lt;!TState&gt; AdaptiveCards" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.AdaptiveCards" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdaptiveCards As AdaptiveCards(Of TState)" />
      <MemberSignature Language="F#" Value="member this.AdaptiveCards : Microsoft.Teams.AI.AdaptiveCards&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.AdaptiveCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AdaptiveCards&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing Adaptive Card specific features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoute">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; AddRoute (Microsoft.Teams.AI.RouteSelectorAsync selector, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler, bool isInvokeRoute = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; AddRoute(class Microsoft.Teams.AI.RouteSelectorAsync selector, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler, bool isInvokeRoute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.AddRoute(Microsoft.Teams.AI.RouteSelectorAsync,Microsoft.Teams.AI.RouteHandler{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRoute (selector As RouteSelectorAsync, handler As RouteHandler(Of TState), Optional isInvokeRoute As Boolean = false) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.AddRoute : Microsoft.Teams.AI.RouteSelectorAsync * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; * bool -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.AddRoute (selector, handler, isInvokeRoute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selector" Type="Microsoft.Teams.AI.RouteSelectorAsync" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
        <Parameter Name="isInvokeRoute" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selector">Function that's used to select a route. The function returning true triggers the route.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <param name="isInvokeRoute">Boolean indicating if the RouteSelectorAsync is for an activity that uses "invoke" which require special handling. Defaults to `false`.</param>
        <summary>
             Adds a new route to the application.
             
             Developers won't typically need to call this method directly as it's used internally by all
             of the fluent interfaces to register routes for their specific activity types.
             
             Routes will be matched in the order they're added to the application. The first selector to
             return `true` when an activity is received will have its handler called.
            
             Invoke-based activities receive special treatment and are matched separately as they typically
             have shorter execution timeouts.
             </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AI">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AI.AI&lt;TState&gt; AI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AI.AI`1&lt;!TState&gt; AI" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.AI" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AI As AI(Of TState)" />
      <MemberSignature Language="F#" Value="member this.AI : Microsoft.Teams.AI.AI.AI&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.AI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AI.AI&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing AI specific features.
            </summary>
        <value>To be added.</value>
        <remarks>
            This property is only available if the Application was configured with 'ai' options. An
            exception will be thrown if you attempt to access it otherwise.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AuthenticationManager&lt;TState&gt; Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AuthenticationManager`1&lt;!TState&gt; Authentication" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As AuthenticationManager(Of TState)" />
      <MemberSignature Language="F#" Value="member this.Authentication : Microsoft.Teams.AI.AuthenticationManager&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AuthenticationManager&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Accessing authentication specific features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenOrStartSignInAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string?&gt; GetTokenOrStartSignInAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, string settingName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; GetTokenOrStartSignInAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, string settingName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.GetTokenOrStartSignInAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenOrStartSignInAsync (turnContext As ITurnContext, turnState As TState, settingName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="member this.GetTokenOrStartSignInAsync : Microsoft.Bot.Builder.ITurnContext * 'State * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="application.GetTokenOrStartSignInAsync (turnContext, turnState, settingName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="settingName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext"> The turn context.</param>
        <param name="turnState">The turn state.</param>
        <param name="settingName">The name of the authentication setting.</param>
        <param name="cancellationToken">The cancellation token.</param>
        <summary>
            If the user is signed in, get the access token. If not, triggers the sign in flow for the provided authentication setting name
            and returns.In this case, the bot should end the turn until the sign in flow is completed.
            </summary>
        <returns>The access token for the user if they are signed, otherwise null.</returns>
        <remarks>
            Use this method to get the access token for a user that is signed in to the bot.
            If the user isn't signed in, this method starts the sign-in flow.
            The bot should end the turn in this case until the sign-in flow completes and the user is signed in.
            </remarks>
        <exception cref="T:Microsoft.Teams.AI.Exceptions.TeamsAIException" />
      </Docs>
    </Member>
    <Member MemberName="Meetings">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Meetings&lt;TState&gt; Meetings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.Meetings`1&lt;!TState&gt; Meetings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.Meetings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Meetings As Meetings(Of TState)" />
      <MemberSignature Language="F#" Value="member this.Meetings : Microsoft.Teams.AI.Meetings&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.Meetings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Meetings&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing Meetings' specific features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageExtensions">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.MessageExtensions&lt;TState&gt; MessageExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.MessageExtensions`1&lt;!TState&gt; MessageExtensions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.MessageExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageExtensions As MessageExtensions(Of TState)" />
      <MemberSignature Language="F#" Value="member this.MessageExtensions : Microsoft.Teams.AI.MessageExtensions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.MessageExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.MessageExtensions&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing Message Extensions' specific features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnActivity (Microsoft.Teams.AI.MultipleRouteSelector routeSelectors, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnActivity(class Microsoft.Teams.AI.MultipleRouteSelector routeSelectors, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnActivity(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnActivity (routeSelectors As MultipleRouteSelector, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnActivity : Microsoft.Teams.AI.MultipleRouteSelector * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnActivity (routeSelectors, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeSelectors" Type="Microsoft.Teams.AI.MultipleRouteSelector" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="routeSelectors">Combination of String, Regex, and RouteSelectorAsync selectors.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming activities of a given type.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnActivity (Microsoft.Teams.AI.RouteSelectorAsync routeSelector, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnActivity(class Microsoft.Teams.AI.RouteSelectorAsync routeSelector, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnActivity(Microsoft.Teams.AI.RouteSelectorAsync,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnActivity (routeSelector As RouteSelectorAsync, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnActivity : Microsoft.Teams.AI.RouteSelectorAsync * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnActivity (routeSelector, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeSelector" Type="Microsoft.Teams.AI.RouteSelectorAsync" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming activities of a given type.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnActivity (string type, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnActivity(string type, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnActivity(System.String,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnActivity (type As String, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnActivity : string * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnActivity (type, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="type">Name of the activity type to match.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming activities of a given type.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivity">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnActivity (System.Text.RegularExpressions.Regex typePattern, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnActivity(class System.Text.RegularExpressions.Regex typePattern, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnActivity(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnActivity (typePattern As Regex, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnActivity : System.Text.RegularExpressions.Regex * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnActivity (typePattern, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typePattern" Type="System.Text.RegularExpressions.Regex" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="typePattern">Regular expression to match against the incoming activity type.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming activities of a given type.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterTurn">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnAfterTurn (Microsoft.Teams.AI.TurnEventHandlerAsync&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnAfterTurn(class Microsoft.Teams.AI.TurnEventHandlerAsync`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnAfterTurn(Microsoft.Teams.AI.TurnEventHandlerAsync{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnAfterTurn (handler As TurnEventHandlerAsync(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnAfterTurn : Microsoft.Teams.AI.TurnEventHandlerAsync&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnAfterTurn handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.TurnEventHandlerAsync&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call after turn execution.</param>
        <summary>
            Add a handler that will execute after the turn's activity handler logic is processed.
            <br />
            Handler returns true to finish execution of the current turn. Handler returning false
            prevents the bots state from being saved.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeTurn">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnBeforeTurn (Microsoft.Teams.AI.TurnEventHandlerAsync&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnBeforeTurn(class Microsoft.Teams.AI.TurnEventHandlerAsync`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnBeforeTurn(Microsoft.Teams.AI.TurnEventHandlerAsync{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnBeforeTurn (handler As TurnEventHandlerAsync(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnBeforeTurn : Microsoft.Teams.AI.TurnEventHandlerAsync&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnBeforeTurn handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.TurnEventHandlerAsync&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call before turn execution.</param>
        <summary>
            Add a handler that will execute before the turn's activity handler logic is processed.
            <br />
            Handler returns true to continue execution of the current turn. Handler returning false
            prevents the turn from running, but the bots state is still saved, which lets you
            track the reason why the turn was not processed. It also means you can use this as
            a way to call into the dialog system. For example, you could use the OAuthPrompt to sign the
            user in before allowing the AI system to run.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConfigFetch">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnConfigFetch (Microsoft.Teams.AI.ConfigHandlerAsync&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnConfigFetch(class Microsoft.Teams.AI.ConfigHandlerAsync`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnConfigFetch(Microsoft.Teams.AI.ConfigHandlerAsync{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnConfigFetch (handler As ConfigHandlerAsync(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnConfigFetch : Microsoft.Teams.AI.ConfigHandlerAsync&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnConfigFetch handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.ConfigHandlerAsync&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the event is triggered.</param>
        <summary>
            Handles config fetch events for Microsoft Teams.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConfigSubmit">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnConfigSubmit (Microsoft.Teams.AI.ConfigHandlerAsync&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnConfigSubmit(class Microsoft.Teams.AI.ConfigHandlerAsync`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnConfigSubmit(Microsoft.Teams.AI.ConfigHandlerAsync{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnConfigSubmit (handler As ConfigHandlerAsync(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnConfigSubmit : Microsoft.Teams.AI.ConfigHandlerAsync&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnConfigSubmit handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.ConfigHandlerAsync&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the event is triggered.</param>
        <summary>
            Handles config submit events for Microsoft Teams.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConversationUpdate">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnConversationUpdate (string conversationUpdateEvent, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnConversationUpdate(string conversationUpdateEvent, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnConversationUpdate(System.String,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnConversationUpdate (conversationUpdateEvent As String, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnConversationUpdate : string * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnConversationUpdate (conversationUpdateEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationUpdateEvent" Type="System.String" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="conversationUpdateEvent">Name of the conversation update event to handle, can use <see cref="T:Microsoft.Teams.AI.ConversationUpdateEvents" />.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles conversation update events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConversationUpdate">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnConversationUpdate (string[] conversationUpdateEvents, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnConversationUpdate(string[] conversationUpdateEvents, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnConversationUpdate(System.String[],Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnConversationUpdate (conversationUpdateEvents As String(), handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnConversationUpdate : string[] * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnConversationUpdate (conversationUpdateEvents, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conversationUpdateEvents" Type="System.String[]" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="conversationUpdateEvents">Name of the conversation update events to handle, can use <see cref="T:Microsoft.Teams.AI.ConversationUpdateEvents" /> as array item.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles conversation update events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFileConsentAccept">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnFileConsentAccept (Microsoft.Teams.AI.FileConsentHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnFileConsentAccept(class Microsoft.Teams.AI.FileConsentHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnFileConsentAccept(Microsoft.Teams.AI.FileConsentHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnFileConsentAccept (handler As FileConsentHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnFileConsentAccept : Microsoft.Teams.AI.FileConsentHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnFileConsentAccept handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.FileConsentHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles when a file consent card is accepted by the user.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFileConsentDecline">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnFileConsentDecline (Microsoft.Teams.AI.FileConsentHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnFileConsentDecline(class Microsoft.Teams.AI.FileConsentHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnFileConsentDecline(Microsoft.Teams.AI.FileConsentHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnFileConsentDecline (handler As FileConsentHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnFileConsentDecline : Microsoft.Teams.AI.FileConsentHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnFileConsentDecline handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.FileConsentHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles when a file consent card is declined by the user.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessage">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessage (Microsoft.Teams.AI.MultipleRouteSelector routeSelectors, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessage(class Microsoft.Teams.AI.MultipleRouteSelector routeSelectors, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessage(Microsoft.Teams.AI.MultipleRouteSelector,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessage (routeSelectors As MultipleRouteSelector, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessage : Microsoft.Teams.AI.MultipleRouteSelector * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessage (routeSelectors, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeSelectors" Type="Microsoft.Teams.AI.MultipleRouteSelector" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="routeSelectors">Combination of String, Regex, and RouteSelectorAsync selectors.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming messages with a given keyword.
            <br />
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessage">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessage (Microsoft.Teams.AI.RouteSelectorAsync routeSelector, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessage(class Microsoft.Teams.AI.RouteSelectorAsync routeSelector, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessage(Microsoft.Teams.AI.RouteSelectorAsync,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessage (routeSelector As RouteSelectorAsync, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessage : Microsoft.Teams.AI.RouteSelectorAsync * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessage (routeSelector, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeSelector" Type="Microsoft.Teams.AI.RouteSelectorAsync" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="routeSelector">Function that's used to select a route. The function returning true triggers the route.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming messages with a given keyword.
            <br />
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessage">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessage (string text, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessage(string text, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessage(System.String,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessage (text As String, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessage : string * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessage (text, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="text">Substring of the incoming message text.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming messages with a given keyword.
            <br />
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            <br />
            For example, you can easily clear the current conversation anytime a user sends "/reset":
            <br /><code>application.OnMessage("/reset", (context, turnState, _) =&gt; ...);</code></summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessage">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessage (System.Text.RegularExpressions.Regex textPattern, Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessage(class System.Text.RegularExpressions.Regex textPattern, class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessage(System.Text.RegularExpressions.Regex,Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessage (textPattern As Regex, handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessage : System.Text.RegularExpressions.Regex * Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessage (textPattern, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPattern" Type="System.Text.RegularExpressions.Regex" />
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="textPattern">Regular expression to match against the text of an incoming message.</param>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles incoming messages with a given keyword.
            <br />
            This method provides a simple way to have a bot respond anytime a user sends your bot a
            message with a specific word or phrase.
            <br />
            For example, you can easily clear the current conversation anytime a user sends "/reset":
            <br /><code>application.OnMessage(new Regex("reset"), (context, turnState, _) =&gt; ...);</code></summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageDelete">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessageDelete (Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessageDelete(class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessageDelete(Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessageDelete (handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessageDelete : Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessageDelete handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the event is triggered.</param>
        <summary>
            Handles message soft delete events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageEdit">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessageEdit (Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessageEdit(class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessageEdit(Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessageEdit (handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessageEdit : Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessageEdit handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the event is triggered.</param>
        <summary>
            Handles message edit events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageReactionsAdded">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessageReactionsAdded (Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessageReactionsAdded(class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessageReactionsAdded(Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessageReactionsAdded (handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessageReactionsAdded : Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessageReactionsAdded handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles message reactions added events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageReactionsRemoved">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessageReactionsRemoved (Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessageReactionsRemoved(class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessageReactionsRemoved(Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessageReactionsRemoved (handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessageReactionsRemoved : Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessageReactionsRemoved handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles message reactions removed events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMessageUndelete">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnMessageUndelete (Microsoft.Teams.AI.RouteHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnMessageUndelete(class Microsoft.Teams.AI.RouteHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnMessageUndelete(Microsoft.Teams.AI.RouteHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMessageUndelete (handler As RouteHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnMessageUndelete : Microsoft.Teams.AI.RouteHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnMessageUndelete handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.RouteHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the event is triggered.</param>
        <summary>
            Handles message undo soft delete events.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnO365ConnectorCardAction">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnO365ConnectorCardAction (Microsoft.Teams.AI.O365ConnectorCardActionHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnO365ConnectorCardAction(class Microsoft.Teams.AI.O365ConnectorCardActionHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnO365ConnectorCardAction(Microsoft.Teams.AI.O365ConnectorCardActionHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnO365ConnectorCardAction (handler As O365ConnectorCardActionHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnO365ConnectorCardAction : Microsoft.Teams.AI.O365ConnectorCardActionHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnO365ConnectorCardAction handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.O365ConnectorCardActionHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles O365 Connector Card Action activities.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTeamsReadReceipt">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.Application&lt;TState&gt; OnTeamsReadReceipt (Microsoft.Teams.AI.ReadReceiptHandler&lt;TState&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Teams.AI.Application`1&lt;!TState&gt; OnTeamsReadReceipt(class Microsoft.Teams.AI.ReadReceiptHandler`1&lt;!TState&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnTeamsReadReceipt(Microsoft.Teams.AI.ReadReceiptHandler{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnTeamsReadReceipt (handler As ReadReceiptHandler(Of TState)) As Application(Of TState)" />
      <MemberSignature Language="F#" Value="member this.OnTeamsReadReceipt : Microsoft.Teams.AI.ReadReceiptHandler&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="application.OnTeamsReadReceipt handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.Application&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Microsoft.Teams.AI.ReadReceiptHandler&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">Function to call when the route is triggered.</param>
        <summary>
            Handles read receipt events for messages sent by the bot in personal scope.
            </summary>
        <returns>The application instance for chaining purposes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTurnAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnTurnAsync (turnContext As ITurnContext, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="application.OnTurnAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IBot.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Called by the adapter (for example, a <see cref="T:Microsoft.Bot.Builder.Integration.AspNet.Core.CloudAdapter" />)
            at runtime in order to process an inbound <see cref="T:Microsoft.Bot.Schema.Activity" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.ApplicationOptions&lt;TState&gt; Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.ApplicationOptions`1&lt;!TState&gt; Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ApplicationOptions(Of TState)" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.Teams.AI.ApplicationOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.ApplicationOptions&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The application's configured options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartTypingTimer">
      <MemberSignature Language="C#" Value="public void StartTypingTimer (Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartTypingTimer(class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.StartTypingTimer(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartTypingTimer (turnContext As ITurnContext)" />
      <MemberSignature Language="F#" Value="member this.StartTypingTimer : Microsoft.Bot.Builder.ITurnContext -&gt; unit" Usage="application.StartTypingTimer turnContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="turnContext">The turn context.</param>
        <summary>
            Manually start a timer to periodically send "typing" activities.
            </summary>
        <remarks>
            The timer waits 1000ms to send its initial "typing" activity and then send an additional
            "typing" activity every 1000ms.The timer will automatically end once an outgoing activity
            has been sent. If the timer is already running or the current activity is not a "message"
            the call is ignored.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopTypingTimer">
      <MemberSignature Language="C#" Value="public void StopTypingTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopTypingTimer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.Application`1.StopTypingTimer" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopTypingTimer ()" />
      <MemberSignature Language="F#" Value="member this.StopTypingTimer : unit -&gt; unit" Usage="application.StopTypingTimer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Manually stop the typing timer.
            </summary>
        <remarks>
            If the timer isn't running nothing happens.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskModules">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.TaskModules&lt;TState&gt; TaskModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.TaskModules`1&lt;!TState&gt; TaskModules" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.Application`1.TaskModules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskModules As TaskModules(Of TState)" />
      <MemberSignature Language="F#" Value="member this.TaskModules : Microsoft.Teams.AI.TaskModules&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;.TaskModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.TaskModules&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Fluent interface for accessing Task Modules' specific features.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
