<Type Name="OAuthAuthentication&lt;TState&gt;" FullName="Microsoft.Teams.AI.OAuthAuthentication&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public class OAuthAuthentication&lt;TState&gt; : Microsoft.Teams.AI.IAuthentication&lt;TState&gt; where TState : TurnState, new()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OAuthAuthentication`1&lt;.ctor (class Microsoft.Teams.AI.State.TurnState) TState&gt; extends System.Object implements class Microsoft.Teams.AI.IAuthentication`1&lt;!TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.OAuthAuthentication`1" />
  <TypeSignature Language="VB.NET" Value="Public Class OAuthAuthentication(Of TState)&#xA;Implements IAuthentication(Of TState)" />
  <TypeSignature Language="F#" Value="type OAuthAuthentication&lt;'State (requires 'State :&gt; TurnState and 'State : (new : unit -&gt; 'State))&gt; = class&#xA;    interface IAuthentication&lt;'State (requires 'State :&gt; TurnState and 'State : (new : unit -&gt; 'State))&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>Microsoft.Teams.AI.State.TurnState</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Teams.AI.IAuthentication&lt;TState&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TState">To be added.</typeparam>
    <summary>
            Handles authentication using OAuth Connection.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OAuthAuthentication (Microsoft.Teams.AI.Application&lt;TState&gt; app, string name, Microsoft.Teams.AI.OAuthSettings settings, Microsoft.Bot.Builder.IStorage? storage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.Application`1&lt;!TState&gt; app, string name, class Microsoft.Teams.AI.OAuthSettings settings, class Microsoft.Bot.Builder.IStorage storage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.OAuthAuthentication`1.#ctor(Microsoft.Teams.AI.Application{`0},System.String,Microsoft.Teams.AI.OAuthSettings,Microsoft.Bot.Builder.IStorage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (app As Application(Of TState), name As String, settings As OAuthSettings, storage As IStorage)" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.OAuthAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; : Microsoft.Teams.AI.Application&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; * string * Microsoft.Teams.AI.OAuthSettings * Microsoft.Bot.Builder.IStorage -&gt; Microsoft.Teams.AI.OAuthAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="new Microsoft.Teams.AI.OAuthAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; (app, name, settings, storage)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="app" Type="Microsoft.Teams.AI.Application&lt;TState&gt;" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="settings" Type="Microsoft.Teams.AI.OAuthSettings" />
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
      </Parameters>
      <Docs>
        <param name="app">The application.</param>
        <param name="name">The authentication name.</param>
        <param name="settings">The settings to initialize the class</param>
        <param name="storage">The storage to use.</param>
        <summary>
            Initializes the class
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSignedInAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string?&gt; IsUserSignedInAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; IsUserSignedInAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.OAuthAuthentication`1.IsUserSignedInAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUserSignedInAsync (turnContext As ITurnContext, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member IsUserSignedInAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.IsUserSignedInAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="oAuthAuthentication.IsUserSignedInAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.IsUserSignedInAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The turn context.</param>
        <param name="cancellationToken">The cancellation token</param>
        <summary>
            Check if the user is signed, if they are then return the token.
            </summary>
        <returns>The token if the user is signed. Otherwise null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSignInFailure">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.IAuthentication&lt;TState&gt; OnUserSignInFailure (Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.AuthException,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Teams.AI.IAuthentication`1&lt;!TState&gt; OnUserSignInFailure(class System.Func`4&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class Microsoft.Teams.AI.Exceptions.AuthException, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.OAuthAuthentication`1.OnUserSignInFailure(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.Exceptions.AuthException,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnUserSignInFailure (handler As Func(Of ITurnContext, TState, AuthException, Task)) As IAuthentication(Of TState)" />
      <MemberSignature Language="F#" Value="abstract member OnUserSignInFailure : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, Microsoft.Teams.AI.Exceptions.AuthException, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;&#xA;override this.OnUserSignInFailure : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, Microsoft.Teams.AI.Exceptions.AuthException, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="oAuthAuthentication.OnUserSignInFailure handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.OnUserSignInFailure(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.Exceptions.AuthException,System.Threading.Tasks.Task})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.IAuthentication&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,Microsoft.Teams.AI.Exceptions.AuthException,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler function to call when the user failed to signed in</param>
        <summary>
            The handler function is called when the user sign in flow fails
            </summary>
        <returns>The class itself for chaining purpose</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSignInSuccess">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.IAuthentication&lt;TState&gt; OnUserSignInSuccess (Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Teams.AI.IAuthentication`1&lt;!TState&gt; OnUserSignInSuccess(class System.Func`3&lt;class Microsoft.Bot.Builder.ITurnContext, !TState, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.OAuthAuthentication`1.OnUserSignInSuccess(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Function OnUserSignInSuccess (handler As Func(Of ITurnContext, TState, Task)) As IAuthentication(Of TState)" />
      <MemberSignature Language="F#" Value="abstract member OnUserSignInSuccess : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;&#xA;override this.OnUserSignInSuccess : Func&lt;Microsoft.Bot.Builder.ITurnContext, 'State, System.Threading.Tasks.Task (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt; -&gt; Microsoft.Teams.AI.IAuthentication&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState and 'State : (new : unit -&gt; 'State))&gt;" Usage="oAuthAuthentication.OnUserSignInSuccess handler" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.OnUserSignInSuccess(System.Func{Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.Tasks.Task})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.IAuthentication&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;Microsoft.Bot.Builder.ITurnContext,TState,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">The handler function to call when the user has successfully signed in</param>
        <summary>
            The handler function is called when the user has successfully signed in
            </summary>
        <returns>The class itself for chaining purpose</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string?&gt; SignInUserAsync (Microsoft.Bot.Builder.ITurnContext context, TState state, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; SignInUserAsync(class Microsoft.Bot.Builder.ITurnContext context, !TState state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.OAuthAuthentication`1.SignInUserAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignInUserAsync (context As ITurnContext, state As TState, Optional cancellationToken As CancellationToken = Nothing) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member SignInUserAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.SignInUserAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="oAuthAuthentication.SignInUserAsync (context, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.SignInUserAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <param name="cancellationToken">The cancellation token</param>
        <summary>
            Sign in current user
            </summary>
        <returns>The sign in response</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutUserAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SignOutUserAsync (Microsoft.Bot.Builder.ITurnContext context, TState state, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SignOutUserAsync(class Microsoft.Bot.Builder.ITurnContext context, !TState state, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.OAuthAuthentication`1.SignOutUserAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignOutUserAsync (context As ITurnContext, state As TState, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SignOutUserAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SignOutUserAsync : Microsoft.Bot.Builder.ITurnContext * 'State * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="oAuthAuthentication.SignOutUserAsync (context, state, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Teams.AI.IAuthentication`1.SignOutUserAsync(Microsoft.Bot.Builder.ITurnContext,`0,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The turn context</param>
        <param name="state">The turn state</param>
        <param name="cancellationToken">The cancellation token</param>
        <summary>
            Sign out current user
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
