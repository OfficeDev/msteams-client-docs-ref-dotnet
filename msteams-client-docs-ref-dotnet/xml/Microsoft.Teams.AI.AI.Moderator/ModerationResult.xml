<Type Name="ModerationResult" FullName="Microsoft.Teams.AI.AI.Moderator.ModerationResult">
  <TypeSignature Language="C#" Value="public class ModerationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ModerationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.AI.Moderator.ModerationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ModerationResult" />
  <TypeSignature Language="F#" Value="type ModerationResult = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The result item from the OpenAI's moderation API call.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ModerationResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.AI.Moderator.ModerationResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoriesFlagged">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged? CategoriesFlagged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged CategoriesFlagged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.Moderator.ModerationResult.CategoriesFlagged" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoriesFlagged As ModerationCategoriesFlagged" />
      <MemberSignature Language="F#" Value="member this.CategoriesFlagged : Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged with get, set" Usage="Microsoft.Teams.AI.AI.Moderator.ModerationResult.CategoriesFlagged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("categories")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("categories")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AI.Moderator.ModerationCategoriesFlagged</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The OpenAI categories and whether they were flagged or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryScores">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores? CategoryScores { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores CategoryScores" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.Moderator.ModerationResult.CategoryScores" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryScores As ModerationCategoryScores" />
      <MemberSignature Language="F#" Value="member this.CategoryScores : Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores with get, set" Usage="Microsoft.Teams.AI.AI.Moderator.ModerationResult.CategoryScores" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("category_scores")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("category_scores")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AI.Moderator.ModerationCategoryScores</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Per category scores denoting model's confidence that input violates OpenAI's policy for the category.
            </summary>
        <value>To be added.</value>
        <remarks>
            Higher score means higher confidence that input violates the policy.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flagged">
      <MemberSignature Language="C#" Value="public bool Flagged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Flagged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.Moderator.ModerationResult.Flagged" />
      <MemberSignature Language="VB.NET" Value="Public Property Flagged As Boolean" />
      <MemberSignature Language="F#" Value="member this.Flagged : bool with get, set" Usage="Microsoft.Teams.AI.AI.Moderator.ModerationResult.Flagged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Text.Json.Serialization.JsonPropertyName("flagged")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Text.Json.Serialization.JsonPropertyName("flagged")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the input was flagged or not.
            </summary>
        <value>To be added.</value>
        <remarks>
            True means content violates OpenAI's policy. Otherwise false.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
