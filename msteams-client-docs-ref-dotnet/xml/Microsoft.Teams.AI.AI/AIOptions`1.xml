<Type Name="AIOptions&lt;TState&gt;" FullName="Microsoft.Teams.AI.AI.AIOptions&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public sealed class AIOptions&lt;TState&gt; where TState : TurnState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AIOptions`1&lt;(class Microsoft.Teams.AI.State.TurnState) TState&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.AI.AIOptions`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AIOptions(Of TState)" />
  <TypeSignature Language="F#" Value="type AIOptions&lt;'State (requires 'State :&gt; TurnState)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <BaseTypeName>Microsoft.Teams.AI.State.TurnState</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TState">The turn state class.</typeparam>
    <summary>
            Options for configuring the AI system.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AIOptions (Microsoft.Teams.AI.AI.Planners.IPlanner&lt;TState&gt; planner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Teams.AI.AI.Planners.IPlanner`1&lt;!TState&gt; planner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.AI.AIOptions`1.#ctor(Microsoft.Teams.AI.AI.Planners.IPlanner{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (planner As IPlanner(Of TState))" />
      <MemberSignature Language="F#" Value="new Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; : Microsoft.Teams.AI.AI.Planners.IPlanner&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; -&gt; Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt;" Usage="new Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; planner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="planner" Type="Microsoft.Teams.AI.AI.Planners.IPlanner&lt;TState&gt;" />
      </Parameters>
      <Docs>
        <param name="planner">The planner to use for generating plans.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Teams.AI.AI.AIOptions`1" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowLooping">
      <MemberSignature Language="C#" Value="public bool? AllowLooping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; AllowLooping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.AIOptions`1.AllowLooping" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowLooping As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowLooping : Nullable&lt;bool&gt; with get, set" Usage="Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt;.AllowLooping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Optional. If true, the AI system will allow the planner to loop.
             </summary>
        <value>To be added.</value>
        <remarks>
             The default value is `true`.
             
             Looping is needed for augmentations like `functions` and `monologue` where the LLM needs to
             see the result of the last action that was performed. The AI system will attempt to autodetect
             if it needs to loop so you generally don't need to worry about this setting.
            
             If you're using an augmentation like `sequence` you can set this to `false` to guard against
             any accidental looping.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSteps">
      <MemberSignature Language="C#" Value="public int? MaxSteps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxSteps" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.AIOptions`1.MaxSteps" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSteps As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxSteps : Nullable&lt;int&gt; with get, set" Usage="Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt;.MaxSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional. Maximum number of actions to execute in a single turn.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is 25.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTime">
      <MemberSignature Language="C#" Value="public TimeSpan? MaxTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; MaxTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.AIOptions`1.MaxTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.MaxTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt;.MaxTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional. Maximum amount of time to spend executing a single turn in milliseconds.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is 300000 or 5 minutes.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Moderator">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AI.Moderator.IModerator&lt;TState&gt;? Moderator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AI.Moderator.IModerator`1&lt;!TState&gt; Moderator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.AIOptions`1.Moderator" />
      <MemberSignature Language="VB.NET" Value="Public Property Moderator As IModerator(Of TState)" />
      <MemberSignature Language="F#" Value="member this.Moderator : Microsoft.Teams.AI.AI.Moderator.IModerator&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; with get, set" Usage="Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt;.Moderator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AI.Moderator.IModerator&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional. The moderator to use for moderating input passed to the model and the output
            returned by the model.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default value is an instance of <see cref="T:Microsoft.Teams.AI.AI.Moderator.DefaultModerator`1" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Planner">
      <MemberSignature Language="C#" Value="public Microsoft.Teams.AI.AI.Planners.IPlanner&lt;TState&gt; Planner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Teams.AI.AI.Planners.IPlanner`1&lt;!TState&gt; Planner" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Teams.AI.AI.AIOptions`1.Planner" />
      <MemberSignature Language="VB.NET" Value="Public Property Planner As IPlanner(Of TState)" />
      <MemberSignature Language="F#" Value="member this.Planner : Microsoft.Teams.AI.AI.Planners.IPlanner&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; with get, set" Usage="Microsoft.Teams.AI.AI.AIOptions&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt;.Planner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Teams.AI.AI.Planners.IPlanner&lt;TState&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The planner to use for generating plans.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
