<Type Name="IPlanner&lt;TState&gt;" FullName="Microsoft.Teams.AI.AI.Planners.IPlanner&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public interface IPlanner&lt;TState&gt; where TState : TurnState" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlanner`1&lt;(class Microsoft.Teams.AI.State.TurnState) TState&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Teams.AI.AI.Planners.IPlanner`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlanner(Of TState)" />
  <TypeSignature Language="F#" Value="type IPlanner&lt;'State (requires 'State :&gt; TurnState)&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Teams.AI</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState">
      <Constraints>
        <BaseTypeName>Microsoft.Teams.AI.State.TurnState</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TState">To be added.</typeparam>
    <summary>
            A planner is responsible for generating a plan that the AI system will execute.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.AI.Planners.Plan&gt; BeginTaskAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, Microsoft.Teams.AI.AI.AI&lt;TState&gt; ai, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Teams.AI.AI.Planners.Plan&gt; BeginTaskAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, class Microsoft.Teams.AI.AI.AI`1&lt;!TState&gt; ai, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.AI.Planners.IPlanner`1.BeginTaskAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.AI{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTaskAsync (turnContext As ITurnContext, turnState As TState, ai As AI(Of TState), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Plan)" />
      <MemberSignature Language="F#" Value="abstract member BeginTaskAsync : Microsoft.Bot.Builder.ITurnContext * 'State * Microsoft.Teams.AI.AI.AI&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.AI.Planners.Plan&gt;" Usage="iPlanner.BeginTaskAsync (turnContext, turnState, ai, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.AI.Planners.Plan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="ai" Type="Microsoft.Teams.AI.AI.AI&lt;TState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">Context for the current turn of conversation</param>
        <param name="turnState">Application state for the current turn of conversation</param>
        <param name="ai">The AI system that is generating the plan.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Starts a new task.
             </summary>
        <returns>The plan that was generated.</returns>
        <remarks>
             This method is called when the AI system is ready to start a new task. The planner should
             generate a plan that the AI system will execute. Returning an empty plan signals that
             there is no work to be performed.
            
             The planner should take the users input from `state.temp.input`.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueTaskAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.AI.Planners.Plan&gt; ContinueTaskAsync (Microsoft.Bot.Builder.ITurnContext turnContext, TState turnState, Microsoft.Teams.AI.AI.AI&lt;TState&gt; ai, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Teams.AI.AI.Planners.Plan&gt; ContinueTaskAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, !TState turnState, class Microsoft.Teams.AI.AI.AI`1&lt;!TState&gt; ai, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Teams.AI.AI.Planners.IPlanner`1.ContinueTaskAsync(Microsoft.Bot.Builder.ITurnContext,`0,Microsoft.Teams.AI.AI.AI{`0},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContinueTaskAsync (turnContext As ITurnContext, turnState As TState, ai As AI(Of TState), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Plan)" />
      <MemberSignature Language="F#" Value="abstract member ContinueTaskAsync : Microsoft.Bot.Builder.ITurnContext * 'State * Microsoft.Teams.AI.AI.AI&lt;'State (requires 'State :&gt; Microsoft.Teams.AI.State.TurnState)&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.AI.Planners.Plan&gt;" Usage="iPlanner.ContinueTaskAsync (turnContext, turnState, ai, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Teams.AI</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Teams.AI.AI.Planners.Plan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="turnState" Type="TState" />
        <Parameter Name="ai" Type="Microsoft.Teams.AI.AI.AI&lt;TState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">Context for the current turn of conversation</param>
        <param name="turnState">Application state for the current turn of conversation</param>
        <param name="ai">The AI system that is generating the plan.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Continues the current task.
             </summary>
        <returns>The plan that was generated.</returns>
        <remarks>
             This method is called when the AI system has finished executing the previous plan and is
             ready to continue the current task. The planner should generate a plan that the AI system
             will execute. Returning an empty plan signals that the task is completed and there is no work
             to be performed.
            
             The output from the last plan step that was executed is passed to the planner via `state.temp.input`.
             </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
